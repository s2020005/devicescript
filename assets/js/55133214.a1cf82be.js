"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[960],{35318:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(27378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,k=c["".concat(s,".").concat(m)]||c[m]||u[m]||r;return n?a.createElement(k,o(o({ref:t},d),{},{components:n})):a.createElement(k,o({ref:t},d))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},13668:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(25773),i=(n(27378),n(35318));const r={pagination_prev:null,pagination_next:null,description:"DeviceScript client for Jacdac bit:radio service"},o="BitRadio",l={unversionedId:"api/clients/bitradio",id:"api/clients/bitradio",title:"BitRadio",description:"DeviceScript client for Jacdac bit:radio service",source:"@site/docs/api/clients/bitradio.md",sourceDirName:"api/clients",slug:"/api/clients/bitradio",permalink:"/devicescript/api/clients/bitradio",draft:!1,tags:[],version:"current",frontMatter:{pagination_prev:null,pagination_next:null,description:"DeviceScript client for Jacdac bit:radio service"},sidebar:"tutorialSidebar"},s={},p=[{value:"Commands",id:"commands",level:2},{value:"sendString",id:"sendstring",level:3},{value:"sendNumber",id:"sendnumber",level:3},{value:"sendValue",id:"sendvalue",level:3},{value:"sendBuffer",id:"sendbuffer",level:3},{value:"Registers",id:"registers",level:2},{value:"enabled",id:"rw:enabled",level:3},{value:"group",id:"rw:group",level:3},{value:"transmissionPower",id:"rw:transmissionPower",level:3},{value:"frequencyBand",id:"rw:frequencyBand",level:3}],d={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"bitradio"},"BitRadio"),(0,i.kt)("p",null,"Support for sending and receiving packets using the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/microsoft/pxt-common-packages/blob/master/libs/radio/docs/reference/radio.md"},"Bit Radio protocol"),", typically used between micro:bit devices."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"client for ",(0,i.kt)("a",{parentName:"li",href:"https://microsoft.github.io/jacdac-docs/services/bitradio/"},"bit:radio service")),(0,i.kt)("li",{parentName:"ul"},"inherits Role")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { BitRadio } from "@devicescript/core"\n\nconst bitRadio = new BitRadio()\n')),(0,i.kt)("h2",{id:"commands"},"Commands"),(0,i.kt)("h3",{id:"sendstring"},"sendString"),(0,i.kt)("p",null,"Sends a string payload as a radio message, maximum 18 characters."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"bitRadio.sendString(message: string): Promise<void>\n")),(0,i.kt)("h3",{id:"sendnumber"},"sendNumber"),(0,i.kt)("p",null,"Sends a double precision number payload as a radio message"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"bitRadio.sendNumber(value: number): Promise<void>\n")),(0,i.kt)("h3",{id:"sendvalue"},"sendValue"),(0,i.kt)("p",null,"Sends a double precision number and a name payload as a radio message"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"bitRadio.sendValue(value: number, name: string): Promise<void>\n")),(0,i.kt)("h3",{id:"sendbuffer"},"sendBuffer"),(0,i.kt)("p",null,"Sends a payload of bytes as a radio message"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"bitRadio.sendBuffer(data: Buffer): Promise<void>\n")),(0,i.kt)("h2",{id:"registers"},"Registers"),(0,i.kt)("h3",{id:"rw:enabled"},"enabled"),(0,i.kt)("p",null,"Turns on/off the radio antenna."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"type: ",(0,i.kt)("inlineCode",{parentName:"p"},"Register<boolean>")," (packing format ",(0,i.kt)("inlineCode",{parentName:"p"},"u8"),")")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"read and write"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { BitRadio } from "@devicescript/core"\n\nconst bitRadio = new BitRadio()\n// ...\nconst value = await bitRadio.enabled.read()\nawait bitRadio.enabled.write(value)\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"track incoming values")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { BitRadio } from "@devicescript/core"\n\nconst bitRadio = new BitRadio()\n// ...\nbitRadio.enabled.subscribe(async (value) => {\n    ...\n})\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"write")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"read")," will block until a server is bound to the client.")),(0,i.kt)("h3",{id:"rw:group"},"group"),(0,i.kt)("p",null,"Group used to filter packets"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"type: ",(0,i.kt)("inlineCode",{parentName:"p"},"Register<number>")," (packing format ",(0,i.kt)("inlineCode",{parentName:"p"},"u8"),")")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"read and write"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { BitRadio } from "@devicescript/core"\n\nconst bitRadio = new BitRadio()\n// ...\nconst value = await bitRadio.group.read()\nawait bitRadio.group.write(value)\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"track incoming values")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { BitRadio } from "@devicescript/core"\n\nconst bitRadio = new BitRadio()\n// ...\nbitRadio.group.subscribe(async (value) => {\n    ...\n})\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"write")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"read")," will block until a server is bound to the client.")),(0,i.kt)("h3",{id:"rw:transmissionPower"},"transmissionPower"),(0,i.kt)("p",null,"Antenna power to increase or decrease range."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"type: ",(0,i.kt)("inlineCode",{parentName:"p"},"Register<number>")," (packing format ",(0,i.kt)("inlineCode",{parentName:"p"},"u8"),")")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"read and write"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { BitRadio } from "@devicescript/core"\n\nconst bitRadio = new BitRadio()\n// ...\nconst value = await bitRadio.transmissionPower.read()\nawait bitRadio.transmissionPower.write(value)\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"track incoming values")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { BitRadio } from "@devicescript/core"\n\nconst bitRadio = new BitRadio()\n// ...\nbitRadio.transmissionPower.subscribe(async (value) => {\n    ...\n})\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"write")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"read")," will block until a server is bound to the client.")),(0,i.kt)("h3",{id:"rw:frequencyBand"},"frequencyBand"),(0,i.kt)("p",null,"Change the transmission and reception band of the radio to the given channel."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"type: ",(0,i.kt)("inlineCode",{parentName:"p"},"Register<number>")," (packing format ",(0,i.kt)("inlineCode",{parentName:"p"},"u8"),")")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"read and write"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { BitRadio } from "@devicescript/core"\n\nconst bitRadio = new BitRadio()\n// ...\nconst value = await bitRadio.frequencyBand.read()\nawait bitRadio.frequencyBand.write(value)\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"track incoming values")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { BitRadio } from "@devicescript/core"\n\nconst bitRadio = new BitRadio()\n// ...\nbitRadio.frequencyBand.subscribe(async (value) => {\n    ...\n})\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"write")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"read")," will block until a server is bound to the client.")),(0,i.kt)("p",null))}u.isMDXComponent=!0}}]);