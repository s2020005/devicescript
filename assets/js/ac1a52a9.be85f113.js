"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9145],{35318:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(27378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),g=o,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||i;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},82443:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(25773),o=(n(27378),n(35318));const i={sidebar_position:5},a="Troubleshooting",l={unversionedId:"getting-started/vscode/troubleshooting",id:"getting-started/vscode/troubleshooting",title:"Troubleshooting",description:"troubleshooting}",source:"@site/docs/getting-started/vscode/troubleshooting.mdx",sourceDirName:"getting-started/vscode",slug:"/getting-started/vscode/troubleshooting",permalink:"/devicescript/getting-started/vscode/troubleshooting",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Debugging",permalink:"/devicescript/getting-started/vscode/debugging"},next:{title:"Local, Remote and Web Workspaces",permalink:"/devicescript/getting-started/vscode/workspaces"}},s={},c=[{value:"DeviceScript CLI not installed",id:"devicescript-cli-not-installed",level:2},{value:"Node.JS won&#39;t start",id:"nodejs-wont-start",level:2},{value:"Port 8081 is used",id:"port-8081-is-used",level:2},{value:"Serial connection won&#39;t connect",id:"serial-connection-wont-connect",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("h2",{id:"devicescript-cli-not-installed"},"DeviceScript CLI not installed"),(0,o.kt)("p",null,"The development server runs the DeviceScript command line (",(0,o.kt)("inlineCode",{parentName:"p"},"@devicescript/cli"),") installed\nlocally in your project.\nMake sure ",(0,o.kt)("inlineCode",{parentName:"p"},"@devicescript/cli")," has been\nadded as a developer dependency to your project, and that dependencies have been installed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add -D @devicescript/cli@latest\nyarn install\n")),(0,o.kt)("h2",{id:"nodejs-wont-start"},"Node.JS won't start"),(0,o.kt)("p",null,"The DeviceScript extension spawns a Node.JS process to\nrun the debugger adapter, connect to hardware device and build sources.\nDepending on your machine configuration, you may have to specify where the Node.JS binaries\nare located."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Open the ",(0,o.kt)("strong",{parentName:"li"},"Settings")),(0,o.kt)("li",{parentName:"ul"},"Search for ",(0,o.kt)("strong",{parentName:"li"},"DeviceScript node")," and update the Node.JS binary path"),(0,o.kt)("li",{parentName:"ul"},"Reload Visual Studio Code")),(0,o.kt)("h2",{id:"port-8081-is-used"},"Port 8081 is used"),(0,o.kt)("p",null,"It may happen that a previous session left the development server dangling, run this command to kill processes hanging on port ",(0,o.kt)("inlineCode",{parentName:"p"},"8081"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npx kill-port 8081\n")),(0,o.kt)("h2",{id:"serial-connection-wont-connect"},"Serial connection won't connect"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"serial connection used by another application"),(0,o.kt)("li",{parentName:"ul"},"make sure the ",(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/serialport"},"serialport")," package is installed"),(0,o.kt)("li",{parentName:"ul"},"running in remote workspace")))}u.isMDXComponent=!0}}]);