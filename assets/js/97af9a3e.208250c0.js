"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4768],{35318:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(27378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=c(n),d=i,m=g["".concat(o,".").concat(d)]||g[d]||u[d]||a;return n?r.createElement(m,s(s({ref:t},p),{},{components:n})):r.createElement(m,s({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,s=new Array(a);s[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[g]="string"==typeof e?e:i,s[1]=l;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},36599:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(25773),i=(n(27378),n(35318));const a={},s="Settings",l={unversionedId:"api/settings/index",id:"api/settings/index",title:"Settings",description:"The @devicescript/settings builtin module provides a lightweight flash storage for small setting values.",source:"@site/docs/api/settings/index.md",sourceDirName:"api/settings",slug:"/api/settings/",permalink:"/devicescript/api/settings/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Utilities operators",permalink:"/devicescript/api/observables/utils"},next:{title:"Test",permalink:"/devicescript/api/test/"}},o={},c=[{value:"Usage",id:"usage",level:2},{value:"writeSetting",id:"writesetting",level:3},{value:"readSetting",id:"readsetting",level:3},{value:"deleteSetting",id:"deletesetting",level:3}],p={toc:c},g="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(g,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"settings"},"Settings"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"@devicescript/settings")," ",(0,i.kt)("a",{parentName:"p",href:"/developer/packages"},"builtin")," module provides a lightweight flash storage for small setting values.\nSettings values are serialized in flash and available accross device reset. Firmware updates might erase the settings."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("h3",{id:"writesetting"},"writeSetting"),(0,i.kt)("p",null,"Serializes an object into a setting at a given key. The key name should be less than 16 characters."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { writeSetting } from "@devicescript/settings"\n\n// highlight-next-line\nawait writeSetting("hello", { world: true })\n')),(0,i.kt)("h3",{id:"readsetting"},"readSetting"),(0,i.kt)("p",null,"Deserializes an object from a setting at a given key. If the key is missing or invalid format, it returns ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," or the second argument."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { readSetting } from "@devicescript/settings"\n\n// highlight-next-line\nconst world = await readSetting("hello", ":)")\n')),(0,i.kt)("h3",{id:"deletesetting"},"deleteSetting"),(0,i.kt)("p",null,"Deletes a setting at the given key. If the setting does not exist, does nothing."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { deleteSetting } from "@devicescript/settings"\n\n// highlight-next-line\nawait deleteSetting("hello")\n')))}u.isMDXComponent=!0}}]);