"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3218],{35318:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>v});var n=a(27378);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=d(a),m=r,v=u["".concat(s,".").concat(m)]||u[m]||p[m]||l;return a?n.createElement(v,i(i({ref:t},c),{},{components:a})):n.createElement(v,i({ref:t},c))}));function v(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},39798:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(27378),r=a(38944);const l={tabItem:"tabItem_wHwb"};function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,i),hidden:a},t)}},23930:(e,t,a)=>{a.d(t,{Z:()=>N});var n=a(25773),r=a(27378),l=a(38944),i=a(83457),o=a(3620),s=a(30654),d=a(70784),c=a(71819);function u(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function p(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??u(a);return function(e){const t=(0,d.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function m(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function v(e){let{queryString:t=!1,groupId:a}=e;const n=(0,o.k6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=p(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[s,d]=v({queryString:a,groupId:n}),[u,f]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,c.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),h=(()=>{const e=s??u;return m({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{h&&o(h)}),[h]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),f(e)}),[d,f,l]),tabValues:l}}var h=a(76457);const b={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};function k(e){let{className:t,block:a,selectedValue:o,selectValue:s,tabValues:d}=e;const c=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.o5)(),p=e=>{const t=e.currentTarget,a=c.indexOf(t),n=d[a].value;n!==o&&(u(t),s(n))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},d.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},i,{className:(0,l.Z)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":o===t})}),a??t)})))}function g(e){let{lazy:t,children:a,selectedValue:n}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function y(e){const t=f(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",b.tabList)},r.createElement(k,(0,n.Z)({},e,t)),r.createElement(g,(0,n.Z)({},e,t)))}function N(e){const t=(0,h.Z)();return r.createElement(y,(0,n.Z)({key:String(t)},e))}},67101:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>v,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var n=a(25773),r=(a(27378),a(35318)),l=a(23930),i=a(39798);const o={sidebar_position:0},s="Command Line Interface",d={unversionedId:"api/cli",id:"api/cli",title:"Command Line Interface",description:"The DeviceScript command line (CLI) allows to compile and debug programs from your favorite IDE.",source:"@site/docs/api/cli.mdx",sourceDirName:"api",slug:"/api/cli",permalink:"/devicescript/api/cli",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Add Board",permalink:"/devicescript/devices/add-board"},next:{title:"Code",permalink:"/devicescript/api/core/"}},c={},u=[{value:"Setup",id:"setup",level:2},{value:"devs init [dir]",id:"devs-init-dir",level:2},{value:"--force",id:"--force",level:3},{value:"--no-install",id:"--no-install",level:3},{value:"devs add ...",id:"devs-add-",level:2},{value:"add test",id:"add-test",level:3},{value:"add board",id:"add-board",level:3},{value:"add service",id:"add-service",level:3},{value:"add sim",id:"add-sim",level:3},{value:"add npm",id:"add-npm",level:3},{value:"devs build",id:"devs-build",level:2},{value:"custom services and boards",id:"custom-services-and-boards",level:3},{value:"--stats",id:"--stats",level:3},{value:"devs devtools",id:"devs-devtools",level:2},{value:"build watch",id:"build-watch",level:3},{value:"--internet",id:"--internet",level:4},{value:"devs flash",id:"devs-flash",level:2}],p={toc:u},m="wrapper";function v(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"command-line-interface"},"Command Line Interface"),(0,r.kt)("p",null,"The DeviceScript command line (CLI) allows to compile and debug programs from your favorite IDE.\nThe CLI also also usable within containers (Docker, GitHub Codespaces, CodeSandbox, ...)."),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"install ",(0,r.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"Node.JS 18+")),(0,r.kt)("li",{parentName:"ul"},"install the CLI")),(0,r.kt)(l.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @devicescript/cli@latest --save-dev\n"))),(0,r.kt)(i.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @devicescript/cli@latest --dev\n"))),(0,r.kt)(i.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add @devicescript/cli@latest --save-dev\n")))),(0,r.kt)("p",null,"The command tool is named ",(0,r.kt)("inlineCode",{parentName:"p"},"devicescript")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"devs")," for short.\nThe full list of options for each command is available through the CLI by running ",(0,r.kt)("inlineCode",{parentName:"p"},"devs help <command>"),"."),(0,r.kt)("h2",{id:"devs-init-dir"},"devs init ","[","dir","]"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"init")," commands creates or updates the necessary files to get syntax completion\nand checking in DeviceScript project (typically from Visual Studio Code)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"devs init myproject\n")),(0,r.kt)("p",null,"The command will create the files under ",(0,r.kt)("inlineCode",{parentName:"p"},"myproject"),". A device script project will look as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},".devicescript/     reserved folder for devicescript generated files\npackage.json       projet configuration\ndevsconfig.json    configure the DeviceScript compiler with additional flags,\n                   also used by VSCode extension to activate.\nsrc/               directory for DeviceScript sources\nsrc/main.ts        usual name for your entry point application\nsrc/tsconfig.json  configure the TypeScript compiler to compile DeviceScript syntax\n...\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Make sure to keep the ",(0,r.kt)("inlineCode",{parentName:"p"},"devsconfig.json")," file even if it is empty.\nIt is used as a marker to activate the ",(0,r.kt)("a",{parentName:"p",href:"/getting-started/vscode"},"Visual Studio Code extension"),".")),(0,r.kt)("h3",{id:"--force"},"--force"),(0,r.kt)("p",null,"By default, ",(0,r.kt)("inlineCode",{parentName:"p"},"init")," will not override existing ",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig.json"),". Using this flag, you can override this setting\nand force refreshing that file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"devs init --force\n")),(0,r.kt)("h3",{id:"--no-install"},"--no-install"),(0,r.kt)("p",null,"Do not run ",(0,r.kt)("inlineCode",{parentName:"p"},"npm")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn ")," install after dropping the files."),(0,r.kt)("h2",{id:"devs-add-"},"devs add ..."),(0,r.kt)("p",null,"The generated project by ",(0,r.kt)("inlineCode",{parentName:"p"},"init")," is barebone by design. The ",(0,r.kt)("inlineCode",{parentName:"p"},"add")," command can be used to\nupdate the project with extra features. Each add command may require additional arguments."),(0,r.kt)("h3",{id:"add-test"},"add test"),(0,r.kt)("p",null,"Configures the project to add DeviceScript unit tests."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"devs add test\n")),(0,r.kt)("h3",{id:"add-board"},"add board"),(0,r.kt)("p",null,"Configures the project to add a custom device configuration (",(0,r.kt)("inlineCode",{parentName:"p"},"board"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"devs add board\n")),(0,r.kt)("h3",{id:"add-service"},"add service"),(0,r.kt)("p",null,"Configures the project to add custom services."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"devs add service\n")),(0,r.kt)("h3",{id:"add-sim"},"add sim"),(0,r.kt)("p",null,"Configures the project to add a Node.JS subproject that runs simulated devices."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"devs add sim\n")),(0,r.kt)("h3",{id:"add-npm"},"add npm"),(0,r.kt)("p",null,"Prepre the project to be published to ",(0,r.kt)("a",{parentName:"p",href:"https://npmjs.com/"},"npm.js")," as a library."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"devs add npm\n")),(0,r.kt)("h2",{id:"devs-build"},"devs build"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"build")," command compiles the entry point file from the current project\nusing the resolution rules in ",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig.json"),". It is the default command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"devs build\n")),(0,r.kt)("h3",{id:"custom-services-and-boards"},"custom services and boards"),(0,r.kt)("p",null,"The command line will automatically compile markdown files under the ",(0,r.kt)("inlineCode",{parentName:"p"},"services")," folder (",(0,r.kt)("inlineCode",{parentName:"p"},"./services/*.md"),")\ninto TypeScript client definition in ",(0,r.kt)("inlineCode",{parentName:"p"},"node_modules/@devicescript/core/src/services.d.ts"),"."),(0,r.kt)("h3",{id:"--stats"},"--stats"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"--stats")," flag enables printing additional debugging information about code size,\nand other useful metrics."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"devs build --stats\n")),(0,r.kt)("h2",{id:"devs-devtools"},"devs devtools"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"devtools")," command launches the developer tool server, without trying to build a project."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"devs devtools\n")),(0,r.kt)("h3",{id:"build-watch"},"build watch"),(0,r.kt)("p",null,"To automatically rebuild your program based on file changes,\nadd the file name."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"devs devtools main.ts\n")),(0,r.kt)("p",null,"When the build is run in watch mode, it also opens a developer tool web server that allows\nto execute the compiled program in a simulator or physical devices. Follow the console\napplication instructions to open the web page."),(0,r.kt)("mermaid",{value:"stateDiagram-v2\n    direction LR\n    sources\n    cli: CLI\\n(compiler + web server)\n    browser: Dev Tools\\n(browser)\n    sim: Simulator\n    dev: Hardware Device\n    cli --\x3e sources: watch files\n    cli --\x3e browser: bytecode\n    browser --\x3e sim\n    browser --\x3e dev: WebSerial, WebUsb, ..."}),(0,r.kt)("h4",{id:"--internet"},"--internet"),(0,r.kt)("p",null,"To access the developer tools outside localhost, add ",(0,r.kt)("inlineCode",{parentName:"p"},"--internet")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"devs devtools --internet\n")),(0,r.kt)("h2",{id:"devs-flash"},"devs flash"),(0,r.kt)("p",null,"Command to flash the DeviceScript firmware onto a physical device. There are dedicated documentation\npages to support various MCU architectures."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/devices/esp32/"},"ESP32")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/devices/rp2040/"},"RP2040"))))}v.isMDXComponent=!0}}]);