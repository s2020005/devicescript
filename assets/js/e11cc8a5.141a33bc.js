"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9409],{35318:(t,e,r)=>{r.d(e,{Zo:()=>s,kt:()=>u});var n=r(27378);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function p(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var l=n.createContext({}),d=function(t){var e=n.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},s=function(t){var e=d(t.components);return n.createElement(l.Provider,{value:e},t.children)},c="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},g=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,i=t.originalType,l=t.parentName,s=p(t,["components","mdxType","originalType","parentName"]),c=d(r),g=a,u=c["".concat(l,".").concat(g)]||c[g]||m[g]||i;return r?n.createElement(u,o(o({ref:e},s),{},{components:r})):n.createElement(u,o({ref:e},s))}));function u(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=r.length,o=new Array(i);o[0]=g;var p={};for(var l in e)hasOwnProperty.call(e,l)&&(p[l]=e[l]);p.originalType=t,p[c]="string"==typeof t?t:a,o[1]=p;for(var d=2;d<i;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},2823:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var n=r(25773),a=(r(27378),r(35318));const i={description:"MSR JacdacIoT 48 v0.2"},o="MSR JacdacIoT 48 v0.2",p={unversionedId:"devices/esp32/msr48",id:"devices/esp32/msr48",title:"MSR JacdacIoT 48 v0.2",description:"MSR JacdacIoT 48 v0.2",source:"@site/docs/devices/esp32/msr48.mdx",sourceDirName:"devices/esp32",slug:"/devices/esp32/msr48",permalink:"/devicescript/devices/esp32/msr48",draft:!1,tags:[],version:"current",frontMatter:{description:"MSR JacdacIoT 48 v0.2"},sidebar:"tutorialSidebar",previous:{title:"MSR JM Brain S2-mini 207 v4.3",permalink:"/devicescript/devices/esp32/msr207-v43"},next:{title:"Seeed Studio XIAO ESP32C3 with MSR218 base",permalink:"/devicescript/devices/esp32/seeed-xiao-esp32c3-msr218"}},l={},d=[{value:"Features",id:"features",level:2},{value:"Stores",id:"stores",level:2},{value:"Pins",id:"pins",level:2},{value:"Firmware update",id:"firmware-update",level:2},{value:"Configuration",id:"configuration",level:2}],s={toc:d},c="wrapper";function m(t){let{components:e,...r}=t;return(0,a.kt)(c,(0,n.Z)({},s,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"msr-jacdaciot-48-v02"},"MSR JacdacIoT 48 v0.2"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://microsoft.github.io/jacdac-docs/images/devices/microsoft-research/jmbrainesp3248v03.catalog.jpg",alt:"MSR JacdacIoT 48 v0.2 picture"})),(0,a.kt)("h2",{id:"features"},"Features"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Jacdac on pin 17 using Jacdac connector"),(0,a.kt)("li",{parentName:"ul"},"I2C on SDA/SCL: 9/10 using Qwiic connector"),(0,a.kt)("li",{parentName:"ul"},"RGB LED on pins 8, 7, 6  (use ",(0,a.kt)("a",{parentName:"li",href:"/developer/status-light"},"setStatusLight")," to control)"),(0,a.kt)("li",{parentName:"ul"},"Service: power (auto-start)")),(0,a.kt)("h2",{id:"stores"},"Stores"),(0,a.kt)("h2",{id:"pins"},"Pins"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"pin name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"hardware id"),(0,a.kt)("th",{parentName:"tr",align:"right"},"features"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"P33")),(0,a.kt)("td",{parentName:"tr",align:"left"},"GPIO33"),(0,a.kt)("td",{parentName:"tr",align:"right"},"io")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"P34")),(0,a.kt)("td",{parentName:"tr",align:"left"},"GPIO34"),(0,a.kt)("td",{parentName:"tr",align:"right"},"io")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"P35")),(0,a.kt)("td",{parentName:"tr",align:"left"},"GPIO35"),(0,a.kt)("td",{parentName:"tr",align:"right"},"io")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"P36")),(0,a.kt)("td",{parentName:"tr",align:"left"},"GPIO36"),(0,a.kt)("td",{parentName:"tr",align:"right"},"io")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"RX")),(0,a.kt)("td",{parentName:"tr",align:"left"},"GPIO38"),(0,a.kt)("td",{parentName:"tr",align:"right"},"io")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"TX")),(0,a.kt)("td",{parentName:"tr",align:"left"},"GPIO37"),(0,a.kt)("td",{parentName:"tr",align:"right"},"io")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"i2c.pinSCL")),(0,a.kt)("td",{parentName:"tr",align:"left"},"GPIO10"),(0,a.kt)("td",{parentName:"tr",align:"right"},"analogIn,  io")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"i2c.pinSDA")),(0,a.kt)("td",{parentName:"tr",align:"left"},"GPIO9"),(0,a.kt)("td",{parentName:"tr",align:"right"},"analogIn,  io")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"jacdac.pin")),(0,a.kt)("td",{parentName:"tr",align:"left"},"GPIO17"),(0,a.kt)("td",{parentName:"tr",align:"right"},"analogOut,  io")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"led.rgb","[0]",".pin")),(0,a.kt)("td",{parentName:"tr",align:"left"},"GPIO8"),(0,a.kt)("td",{parentName:"tr",align:"right"},"analogIn,  io")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"led.rgb","[1]",".pin")),(0,a.kt)("td",{parentName:"tr",align:"left"},"GPIO7"),(0,a.kt)("td",{parentName:"tr",align:"right"},"analogIn,  io")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"led.rgb","[2]",".pin")),(0,a.kt)("td",{parentName:"tr",align:"left"},"GPIO6"),(0,a.kt)("td",{parentName:"tr",align:"right"},"analogIn,  io")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"services.power","[0]",".pinEn")),(0,a.kt)("td",{parentName:"tr",align:"left"},"GPIO2"),(0,a.kt)("td",{parentName:"tr",align:"right"},"analogIn,  io")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"services.power","[0]",".pinFault")),(0,a.kt)("td",{parentName:"tr",align:"left"},"GPIO13"),(0,a.kt)("td",{parentName:"tr",align:"right"},"io")))),(0,a.kt)("h2",{id:"firmware-update"},"Firmware update"),(0,a.kt)("p",null,"In ",(0,a.kt)("a",{parentName:"p",href:"/getting-started/vscode"},"Visual Studio Code"),",\nselect ",(0,a.kt)("strong",{parentName:"p"},"DeviceScript: Flash Firmware...")," from the command palette."),(0,a.kt)("p",null,"Run this ",(0,a.kt)("a",{parentName:"p",href:"/api/cli"},"command line")," command and follow the instructions."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"devicescript flash --board msr48\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/microsoft/devicescript-esp32/releases/latest/download/devicescript-esp32s2-msr48-0x1000.bin"},"Firmware"))),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="msr48.json"',title:'"msr48.json"'},'{\n    "$schema": "https://raw.githubusercontent.com/microsoft/devicescript-esp32/main/boards/esp32deviceconfig.schema.json",\n    "id": "msr48",\n    "devName": "MSR JacdacIoT 48 v0.2",\n    "productId": "0x3de1398b",\n    "archId": "esp32s2",\n    "i2c": {\n        "$connector": "Qwiic",\n        "pinSCL": 10,\n        "pinSDA": 9\n    },\n    "jacdac": {\n        "$connector": "Jacdac",\n        "pin": 17\n    },\n    "led": {\n        "rgb": [\n            {\n                "mult": 250,\n                "pin": 8\n            },\n            {\n                "mult": 60,\n                "pin": 7\n            },\n            {\n                "mult": 150,\n                "pin": 6\n            }\n        ]\n    },\n    "pins": {\n        "P33": 33,\n        "P34": 34,\n        "P35": 35,\n        "P36": 36,\n        "RX": 38,\n        "TX": 37\n    },\n    "services": [\n        {\n            "faultIgnoreMs": 100,\n            "mode": 0,\n            "name": "power",\n            "pinEn": 2,\n            "pinFault": 13,\n            "service": "power"\n        }\n    ],\n    "uartLog": true\n}\n')))}m.isMDXComponent=!0}}]);