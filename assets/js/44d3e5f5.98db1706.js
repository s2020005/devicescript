"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1409],{35318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var i=n(27378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},k=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),k=r,m=u["".concat(s,".").concat(k)]||u[k]||d[k]||a;return n?i.createElement(m,o(o({ref:t},c),{},{components:n})):i.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=k;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}k.displayName="MDXCreateElement"},86802:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var i=n(25773),r=(n(27378),n(35318));const a={pagination_prev:null,pagination_next:null,description:"DeviceScript client for Jacdac HID Joystick service"},o="HidJoystick",l={unversionedId:"api/clients/hidjoystick",id:"api/clients/hidjoystick",title:"HidJoystick",description:"DeviceScript client for Jacdac HID Joystick service",source:"@site/docs/api/clients/hidjoystick.md",sourceDirName:"api/clients",slug:"/api/clients/hidjoystick",permalink:"/devicescript/api/clients/hidjoystick",draft:!1,tags:[],version:"current",frontMatter:{pagination_prev:null,pagination_next:null,description:"DeviceScript client for Jacdac HID Joystick service"},sidebar:"tutorialSidebar"},s={},p=[{value:"Commands",id:"commands",level:2},{value:"setButtons",id:"setbuttons",level:3},{value:"setAxis",id:"setaxis",level:3},{value:"Registers",id:"registers",level:2},{value:"buttonCount",id:"const:buttonCount",level:3},{value:"buttonsAnalog",id:"const:buttonsAnalog",level:3},{value:"axisCount",id:"const:axisCount",level:3}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"hidjoystick"},"HidJoystick"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This service is experimental and may change in the future.")),(0,r.kt)("p",null,"Controls a HID joystick."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"client for ",(0,r.kt)("a",{parentName:"li",href:"https://microsoft.github.io/jacdac-docs/services/hidjoystick/"},"HID Joystick service")),(0,r.kt)("li",{parentName:"ul"},"inherits Role")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { HidJoystick } from "@devicescript/core"\n\nconst hidJoystick = new HidJoystick()\n')),(0,r.kt)("h2",{id:"commands"},"Commands"),(0,r.kt)("h3",{id:"setbuttons"},"setButtons"),(0,r.kt)("p",null,"Sets the up/down button state, one byte per button, supports analog buttons. For digital buttons, use ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," for released, ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," for pressed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"hidJoystick.setButtons(...pressure: number[]): Promise<void>\n")),(0,r.kt)("h3",{id:"setaxis"},"setAxis"),(0,r.kt)("p",null,"Sets the state of analog inputs."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"hidJoystick.setAxis(...position: number[]): Promise<void>\n")),(0,r.kt)("h2",{id:"registers"},"Registers"),(0,r.kt)("h3",{id:"const:buttonCount"},"buttonCount"),(0,r.kt)("p",null,"Number of button report supported"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Register<number>")," (packing format ",(0,r.kt)("inlineCode",{parentName:"p"},"u8"),")")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"constant: the register value will not change (until the next reset)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"read only"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip",skip:!0},'import { HidJoystick } from "@devicescript/core"\n\nconst hidJoystick = new HidJoystick()\n// ...\nconst value = await hidJoystick.buttonCount.read()\n')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"write")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"read")," will block until a server is bound to the client.")),(0,r.kt)("h3",{id:"const:buttonsAnalog"},"buttonsAnalog"),(0,r.kt)("p",null,"A bitset that indicates which button is analog."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Register<number>")," (packing format ",(0,r.kt)("inlineCode",{parentName:"p"},"u32"),")")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"constant: the register value will not change (until the next reset)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"read only"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip",skip:!0},'import { HidJoystick } from "@devicescript/core"\n\nconst hidJoystick = new HidJoystick()\n// ...\nconst value = await hidJoystick.buttonsAnalog.read()\n')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"write")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"read")," will block until a server is bound to the client.")),(0,r.kt)("h3",{id:"const:axisCount"},"axisCount"),(0,r.kt)("p",null,"Number of analog input supported"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Register<number>")," (packing format ",(0,r.kt)("inlineCode",{parentName:"p"},"u8"),")")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"constant: the register value will not change (until the next reset)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"read only"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip",skip:!0},'import { HidJoystick } from "@devicescript/core"\n\nconst hidJoystick = new HidJoystick()\n// ...\nconst value = await hidJoystick.axisCount.read()\n')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"write")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"read")," will block until a server is bound to the client.")),(0,r.kt)("p",null))}d.isMDXComponent=!0}}]);