"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8861],{35318:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>m});var n=t(27378);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=n.createContext({}),s=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},l=function(e){var r=s(e.components);return n.createElement(p.Provider,{value:r},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},v=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=s(t),v=o,m=d["".concat(p,".").concat(v)]||d[v]||u[v]||i;return t?n.createElement(m,a(a({ref:r},l),{},{components:t})):n.createElement(m,a({ref:r},l))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=v;var c={};for(var p in r)hasOwnProperty.call(r,p)&&(c[p]=r[p]);c.originalType=e,c[d]="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=t[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}v.displayName="MDXCreateElement"},36722:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var n=t(25773),o=(t(27378),t(35318));const i={description:"Mounts a rotary encoder server",title:"Rotary Encoder"},a="Rotary Encoder",c={unversionedId:"api/servers/rotaryencoder",id:"api/servers/rotaryencoder",title:"Rotary Encoder",description:"Mounts a rotary encoder server",source:"@site/docs/api/servers/rotaryencoder.md",sourceDirName:"api/servers",slug:"/api/servers/rotaryencoder",permalink:"/devicescript/api/servers/rotaryencoder",draft:!1,tags:[],version:"current",frontMatter:{description:"Mounts a rotary encoder server",title:"Rotary Encoder"},sidebar:"tutorialSidebar",previous:{title:"Relay",permalink:"/devicescript/api/servers/relay"},next:{title:"Servo",permalink:"/devicescript/api/servers/servo"}},p={},s=[{value:"Options",id:"options",level:2},{value:"pin0, pin1",id:"pin0-pin1",level:3},{value:"clicksPerTurn (optional)",id:"clicksperturn-optional",level:3},{value:"dense (optional)",id:"dense-optional",level:3},{value:"inverted (optional)",id:"inverted-optional",level:3}],l={toc:s},d="wrapper";function u(e){let{components:r,...t}=e;return(0,o.kt)(d,(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"rotary-encoder"},"Rotary Encoder"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"startRotaryEncoder")," function starts a ",(0,o.kt)("a",{parentName:"p",href:"https://microsoft.github.io/jacdac-docs/services/rotaryencoder"},"Rotary Encoder")," server on the device\nand returns a ",(0,o.kt)("a",{parentName:"p",href:"/api/clients/rotaryencoder"},"client"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { gpio } from "@devicescript/core"\nimport { startRotaryEncoder } from "@devicescript/servers"\n\nconst dialA = startRotaryEncoder({\n    pin0: gpio(2),\n    pin1: gpio(3),\n})\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://microsoft.github.io/jacdac-docs/services/_base/"},"service instance name")," is automatically set to the variable name. In this example, it is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"RotadialA"),"."),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("h3",{id:"pin0-pin1"},"pin0, pin1"),(0,o.kt)("p",null,"The pin hardware identifiers on which to mount the Rotary Encoder."),(0,o.kt)("h3",{id:"clicksperturn-optional"},"clicksPerTurn (optional)"),(0,o.kt)("p",null,"Number of reported clicks per full rotation. Default is 12."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { gpio } from "@devicescript/core"\nimport { startRotaryEncoder } from "@devicescript/servers"\n\nconst dialA = startRotaryEncoder({\n    pin0: gpio(2),\n    pin1: gpio(3),\n    // highlight-next-line\n    clicksPerTurn: 24,\n})\n')),(0,o.kt)("h3",{id:"dense-optional"},"dense (optional)"),(0,o.kt)("p",null,'Encoder supports "half-clicks". Default is false.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { gpio } from "@devicescript/core"\nimport { startRotaryEncoder } from "@devicescript/servers"\n\nconst dialA = startRotaryEncoder({\n    pin0: gpio(2),\n    pin1: gpio(3),\n    // highlight-next-line\n    dense: true,\n})\n')),(0,o.kt)("h3",{id:"inverted-optional"},"inverted (optional)"),(0,o.kt)("p",null,"Invert direction. Default is false."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { gpio } from "@devicescript/core"\nimport { startRotaryEncoder } from "@devicescript/servers"\n\nconst dialA = startRotaryEncoder({\n    pin0: gpio(2),\n    pin1: gpio(3),\n    // highlight-next-line\n    inverted: true,\n})\n')))}u.isMDXComponent=!0}}]);