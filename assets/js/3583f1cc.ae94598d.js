"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9178],{35318:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var r=n(27378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,k=m["".concat(c,".").concat(d)]||m[d]||u[d]||l;return n?r.createElement(k,i(i({ref:t},s),{},{components:n})):r.createElement(k,i({ref:t},s))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[m]="string"==typeof e?e:a,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},63603:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var r=n(25773),a=(n(27378),n(35318));const l={pagination_prev:null,pagination_next:null,description:"DeviceScript client for Jacdac Accelerometer service"},i="Accelerometer",o={unversionedId:"api/clients/accelerometer",id:"api/clients/accelerometer",title:"Accelerometer",description:"DeviceScript client for Jacdac Accelerometer service",source:"@site/docs/api/clients/accelerometer.md",sourceDirName:"api/clients",slug:"/api/clients/accelerometer",permalink:"/devicescript/api/clients/accelerometer",draft:!1,tags:[],version:"current",frontMatter:{pagination_prev:null,pagination_next:null,description:"DeviceScript client for Jacdac Accelerometer service"},sidebar:"tutorialSidebar"},c={},p=[{value:"About",id:"about",level:2},{value:"Orientation",id:"orientation",level:2},{value:"Registers",id:"registers",level:2},{value:"reading",id:"ro:reading",level:3},{value:"readingError",id:"ro:readingError",level:3},{value:"readingRange",id:"rw:readingRange",level:3},{value:"supportedRanges",id:"const:supportedRanges",level:3},{value:"Events",id:"events",level:2},{value:"tiltUp",id:"tiltup",level:3},{value:"tiltDown",id:"tiltdown",level:3},{value:"tiltLeft",id:"tiltleft",level:3},{value:"tiltRight",id:"tiltright",level:3},{value:"faceUp",id:"faceup",level:3},{value:"faceDown",id:"facedown",level:3},{value:"freefall",id:"freefall",level:3},{value:"shake",id:"shake",level:3},{value:"force2g",id:"force2g",level:3},{value:"force3g",id:"force3g",level:3},{value:"force6g",id:"force6g",level:3},{value:"force8g",id:"force8g",level:3}],s={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"accelerometer"},"Accelerometer"),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This service is experimental and may change in the future.")),(0,a.kt)("p",null,"A 3-axis accelerometer."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"client for ",(0,a.kt)("a",{parentName:"li",href:"https://microsoft.github.io/jacdac-docs/services/accelerometer/"},"Accelerometer service")),(0,a.kt)("li",{parentName:"ul"},"inherits Sensor")),(0,a.kt)("h2",{id:"about"},"About"),(0,a.kt)("h2",{id:"orientation"},"Orientation"),(0,a.kt)("p",null,"An accelerometer module should translate acceleration values as follows:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Orientation"),(0,a.kt)("th",{parentName:"tr",align:null},"X value (g)"),(0,a.kt)("th",{parentName:"tr",align:null},"Y value (g)"),(0,a.kt)("th",{parentName:"tr",align:null},"Z value (g)"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Module lying flat"),(0,a.kt)("td",{parentName:"tr",align:null},"0"),(0,a.kt)("td",{parentName:"tr",align:null},"0"),(0,a.kt)("td",{parentName:"tr",align:null},"-1")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Module on left edge"),(0,a.kt)("td",{parentName:"tr",align:null},"-1"),(0,a.kt)("td",{parentName:"tr",align:null},"0"),(0,a.kt)("td",{parentName:"tr",align:null},"0")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Module on bottom edge"),(0,a.kt)("td",{parentName:"tr",align:null},"0"),(0,a.kt)("td",{parentName:"tr",align:null},"1"),(0,a.kt)("td",{parentName:"tr",align:null},"0")))),(0,a.kt)("p",null,"We recommend an orientation marking on the PCB so that users can mount modules without having to experiment with the device. Left/bottom can be determined by assuming text on silk runs left-to-right."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { Accelerometer } from "@devicescript/core"\n\nconst accelerometer = new Accelerometer()\n')),(0,a.kt)("h2",{id:"registers"},"Registers"),(0,a.kt)("h3",{id:"ro:reading"},"reading"),(0,a.kt)("p",null,"Indicates the current forces acting on accelerometer."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"type: ",(0,a.kt)("inlineCode",{parentName:"p"},"Register<any[]>")," (packing format ",(0,a.kt)("inlineCode",{parentName:"p"},"i12.20 i12.20 i12.20"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"track incoming values"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip",skip:!0},'import { Accelerometer } from "@devicescript/core"\n\nconst accelerometer = new Accelerometer()\n// ...\naccelerometer.reading.subscribe(async (value) => {\n    ...\n})\n')),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"write")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"read")," will block until a server is bound to the client.")),(0,a.kt)("h3",{id:"ro:readingError"},"readingError"),(0,a.kt)("p",null,"Error on the reading value."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"type: ",(0,a.kt)("inlineCode",{parentName:"p"},"Register<number>")," (packing format ",(0,a.kt)("inlineCode",{parentName:"p"},"u12.20"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"optional: this register may not be implemented")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"read only"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip",skip:!0},'import { Accelerometer } from "@devicescript/core"\n\nconst accelerometer = new Accelerometer()\n// ...\nconst value = await accelerometer.readingError.read()\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"track incoming values")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip",skip:!0},'import { Accelerometer } from "@devicescript/core"\n\nconst accelerometer = new Accelerometer()\n// ...\naccelerometer.readingError.subscribe(async (value) => {\n    ...\n})\n')),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"write")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"read")," will block until a server is bound to the client.")),(0,a.kt)("h3",{id:"rw:readingRange"},"readingRange"),(0,a.kt)("p",null,'Configures the range forces detected.\nThe value will be "rounded up" to one of ',(0,a.kt)("inlineCode",{parentName:"p"},"max_forces_supported"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"type: ",(0,a.kt)("inlineCode",{parentName:"p"},"Register<number>")," (packing format ",(0,a.kt)("inlineCode",{parentName:"p"},"u12.20"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"optional: this register may not be implemented")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"read and write"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip",skip:!0},'import { Accelerometer } from "@devicescript/core"\n\nconst accelerometer = new Accelerometer()\n// ...\nconst value = await accelerometer.readingRange.read()\nawait accelerometer.readingRange.write(value)\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"track incoming values")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip",skip:!0},'import { Accelerometer } from "@devicescript/core"\n\nconst accelerometer = new Accelerometer()\n// ...\naccelerometer.readingRange.subscribe(async (value) => {\n    ...\n})\n')),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"write")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"read")," will block until a server is bound to the client.")),(0,a.kt)("h3",{id:"const:supportedRanges"},"supportedRanges"),(0,a.kt)("p",null,"Lists values supported for writing ",(0,a.kt)("inlineCode",{parentName:"p"},"max_force"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"type: ",(0,a.kt)("inlineCode",{parentName:"li"},"Register<any[]>")," (packing format ",(0,a.kt)("inlineCode",{parentName:"li"},"r: u12.20"),")"),(0,a.kt)("li",{parentName:"ul"},"optional: this register may not be implemented"),(0,a.kt)("li",{parentName:"ul"},"constant: the register value will not change (until the next reset)")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"write")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"read")," will block until a server is bound to the client.")),(0,a.kt)("h2",{id:"events"},"Events"),(0,a.kt)("h3",{id:"tiltup"},"tiltUp"),(0,a.kt)("p",null,"Emitted when accelerometer is tilted in the given direction."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"accelerometer.tiltUp.subscribe(() => {\n\n})\n")),(0,a.kt)("h3",{id:"tiltdown"},"tiltDown"),(0,a.kt)("p",null,"Emitted when accelerometer is tilted in the given direction."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"accelerometer.tiltDown.subscribe(() => {\n\n})\n")),(0,a.kt)("h3",{id:"tiltleft"},"tiltLeft"),(0,a.kt)("p",null,"Emitted when accelerometer is tilted in the given direction."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"accelerometer.tiltLeft.subscribe(() => {\n\n})\n")),(0,a.kt)("h3",{id:"tiltright"},"tiltRight"),(0,a.kt)("p",null,"Emitted when accelerometer is tilted in the given direction."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"accelerometer.tiltRight.subscribe(() => {\n\n})\n")),(0,a.kt)("h3",{id:"faceup"},"faceUp"),(0,a.kt)("p",null,"Emitted when accelerometer is laying flat in the given direction."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"accelerometer.faceUp.subscribe(() => {\n\n})\n")),(0,a.kt)("h3",{id:"facedown"},"faceDown"),(0,a.kt)("p",null,"Emitted when accelerometer is laying flat in the given direction."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"accelerometer.faceDown.subscribe(() => {\n\n})\n")),(0,a.kt)("h3",{id:"freefall"},"freefall"),(0,a.kt)("p",null,"Emitted when total force acting on accelerometer is much less than 1g."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"accelerometer.freefall.subscribe(() => {\n\n})\n")),(0,a.kt)("h3",{id:"shake"},"shake"),(0,a.kt)("p",null,"Emitted when forces change violently a few times."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"accelerometer.shake.subscribe(() => {\n\n})\n")),(0,a.kt)("h3",{id:"force2g"},"force2g"),(0,a.kt)("p",null,"Emitted when force in any direction exceeds given threshold."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"accelerometer.force2g.subscribe(() => {\n\n})\n")),(0,a.kt)("h3",{id:"force3g"},"force3g"),(0,a.kt)("p",null,"Emitted when force in any direction exceeds given threshold."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"accelerometer.force3g.subscribe(() => {\n\n})\n")),(0,a.kt)("h3",{id:"force6g"},"force6g"),(0,a.kt)("p",null,"Emitted when force in any direction exceeds given threshold."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"accelerometer.force6g.subscribe(() => {\n\n})\n")),(0,a.kt)("h3",{id:"force8g"},"force8g"),(0,a.kt)("p",null,"Emitted when force in any direction exceeds given threshold."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"accelerometer.force8g.subscribe(() => {\n\n})\n")),(0,a.kt)("p",null))}u.isMDXComponent=!0}}]);