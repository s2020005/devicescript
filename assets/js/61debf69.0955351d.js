"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2135],{35318:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(27378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(g,a(a({ref:t},p),{},{components:n})):r.createElement(g,a({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},66300:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(25773),o=(n(27378),n(35318));const i={sidebar_position:2,description:"Learn how to set up and use the DeviceScript command line tool for creating and managing projects, and improve your development workflow.",keywords:["DeviceScript","command line","CLI","project setup","development workflow"]},a="Command Line",l={unversionedId:"getting-started/cli",id:"getting-started/cli",title:"Command Line",description:"Learn how to set up and use the DeviceScript command line tool for creating and managing projects, and improve your development workflow.",source:"@site/docs/getting-started/cli.mdx",sourceDirName:"getting-started",slug:"/getting-started/cli",permalink:"/devicescript/getting-started/cli",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Learn how to set up and use the DeviceScript command line tool for creating and managing projects, and improve your development workflow.",keywords:["DeviceScript","command line","CLI","project setup","development workflow"]},sidebar:"tutorialSidebar",previous:{title:"Local, Remote and Web Workspaces",permalink:"/devicescript/getting-started/vscode/workspaces"},next:{title:"Samples",permalink:"/devicescript/getting-started/samples/"}},s={},c=[{value:"Setting up the project",id:"setting-up-the-project",level:2},{value:"Launch the build watch",id:"launch-the-build-watch",level:2},{value:"Edit, deploy, debug loop",id:"edit-deploy-debug-loop",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"command-line"},"Command Line"),(0,o.kt)("p",null,"The command line tool is compatible with container and virtual machines so you can run it\nin Docker, GitHub Codespaces, ..."),(0,o.kt)("h2",{id:"setting-up-the-project"},"Setting up the project"),(0,o.kt)("p",null,"Let's get started by installing the ",(0,o.kt)("a",{parentName:"p",href:"/api/cli"},"DeviceScript command line")," and create an empty project"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Open a terminal in a new folder"),(0,o.kt)("li",{parentName:"ul"},"install ",(0,o.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"Node.js 18+")," if not already installed"),(0,o.kt)("li",{parentName:"ul"},"Use the ",(0,o.kt)("inlineCode",{parentName:"li"},"init")," command to setup a new project")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npx --yes @devicescript/cli@latest init\n")),(0,o.kt)("p",null,"You will have the following files created."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},".devicescript/     reserved folder for devicescript generated files\npackage.json       projet configuration\ndevsconfig.json    configure the DeviceScript compiler with additional flags,\n                   also used by VSCode extension to activate.\nsrc/               directory for DeviceScript sources\nsrc/main.ts        usual name for your entry point application\nsrc/tsconfig.json  configure the TypeScript compiler to compile DeviceScript syntax\n...\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"open ",(0,o.kt)("inlineCode",{parentName:"li"},"src/main.ts")," and copy the following code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/main.ts"',title:'"src/main.ts"'},'import * as ds from "@devicescript/core"\nimport { debounceTime, filter } from "@devicescript/observables"\n\nconst sensor = new ds.AirPressure()\nconst mouse = new ds.HidMouse()\n// listen for pressure changes\nsensor.reading\n    .pipe(\n        filter(pressure => pressure > 1400),\n        debounceTime(500)\n    )\n    .subscribe(async () => {\n        console.log(`click!`)\n        await mouse.setButton(\n            ds.HidMouseButton.Left,\n            ds.HidMouseButtonEvent.Click\n        )\n    })\n')),(0,o.kt)("h2",{id:"launch-the-build-watch"},"Launch the build watch"),(0,o.kt)("p",null,"Assuming ",(0,o.kt)("inlineCode",{parentName:"p"},"src/main.ts")," is the root file of your application,\nlaunch a compilation task in watch mode using this command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"devs devtools src/main.ts\n")),(0,o.kt)("p",null,"or, for short,"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn watch\n")),(0,o.kt)("p",null,"The command line task will also start a local web server that will send the compiled bytecode\nto a developer tools page similar to the one hosted in the docs."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"open the developer tools page, typically http://localhost:8081/ (see cli output)"),(0,o.kt)("li",{parentName:"ul"},"use te developer tools page similarly to the embedded docs page")),(0,o.kt)("h2",{id:"edit-deploy-debug-loop"},"Edit, deploy, debug loop"),(0,o.kt)("p",null,"From here, your developer inner loop will be very similar to building/debugging a web site with hot reload."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"make an edit in your source file, say ",(0,o.kt)("inlineCode",{parentName:"li"},"src/main.ts")),(0,o.kt)("li",{parentName:"ul"},"after a couple seconds, the compiler picks up the changes, produces a new bytecode and sends it to the developer tools"),(0,o.kt)("li",{parentName:"ul"},"the developer tools automatically deploy the bytecode to the select device (by default the simulator)"),(0,o.kt)("li",{parentName:"ul"},"switch from VS Code to the browser and debug your new code")))}u.isMDXComponent=!0}}]);