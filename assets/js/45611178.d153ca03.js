"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8632],{35318:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>f});var n=t(27378);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),p=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},l=function(e){var r=p(e.components);return n.createElement(s.Provider,{value:r},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=p(t),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return t?n.createElement(f,c(c({ref:r},l),{},{components:t})):n.createElement(f,c({ref:r},l))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=d;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[m]="string"==typeof e?e:a,c[1]=i;for(var p=2;p<o;p++)c[p]=t[p];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},49355:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=t(25773),a=(t(27378),t(35318));const o={description:"Mounts an accelerometer server",title:"Accelerometer"},c="Accelerometer",i={unversionedId:"api/servers/accelerometer",id:"api/servers/accelerometer",title:"Accelerometer",description:"Mounts an accelerometer server",source:"@site/docs/api/servers/accelerometer.md",sourceDirName:"api/servers",slug:"/api/servers/accelerometer",permalink:"/devicescript/api/servers/accelerometer",draft:!1,tags:[],version:"current",frontMatter:{description:"Mounts an accelerometer server",title:"Accelerometer"},sidebar:"tutorialSidebar",previous:{title:"Servers",permalink:"/devicescript/api/servers/"},next:{title:"AHT20",permalink:"/devicescript/api/servers/aht20"}},s={},p=[{value:"Coordinate transforms",id:"coordinate-transforms",level:2}],l={toc:p},m="wrapper";function u(e){let{components:r,...t}=e;return(0,a.kt)(m,(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"accelerometer"},"Accelerometer"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"startAccelerometer")," function starts a ",(0,a.kt)("a",{parentName:"p",href:"https://microsoft.github.io/jacdac-docs/services/accelerometer"},"accelerometer")," server on the device\nand returns a ",(0,a.kt)("a",{parentName:"p",href:"/api/clients/accelerometer"},"client"),"."),(0,a.kt)("p",null,"The accelerometer IMU chip will be auto-detected if it is supported."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { startAccelerometer } from "@devicescript/servers"\nconst acc = startAccelerometer({})\n')),(0,a.kt)("h2",{id:"coordinate-transforms"},"Coordinate transforms"),(0,a.kt)("p",null,"You can specify transform for X, Y, Z axis of the accelerometer to compensate for the physical\nplacement of the IMU chip.\nSee ",(0,a.kt)("a",{parentName:"p",href:"https://microsoft.github.io/jacdac-docs/services/accelerometer"},"service spec")," for\ninfo about what XYZ values should be returned, depending on device position."),(0,a.kt)("p",null,"For each output axis (",(0,a.kt)("inlineCode",{parentName:"p"},"trX"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"trY"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"trZ"),") you specify input axis ",(0,a.kt)("inlineCode",{parentName:"p"},"1"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"2"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"3"),"\nor negated input axis ",(0,a.kt)("inlineCode",{parentName:"p"},"-1"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"-2"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"-3"),".\nThe default is ",(0,a.kt)("inlineCode",{parentName:"p"},"{ trX: 1, trY: 2, trZ: 3 }"),", which is no transform.\nThe following would work for accelerometer mounted upside down and rotated,\nit transforms ",(0,a.kt)("inlineCode",{parentName:"p"},"(x1, y2, z3)")," into ",(0,a.kt)("inlineCode",{parentName:"p"},"(y2, -x1, -z3)"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { startAccelerometer } from "@devicescript/servers"\nconst acc = startAccelerometer({\n    trX: 2,\n    trY: -1,\n    trZ: -3,\n})\n')))}u.isMDXComponent=!0}}]);