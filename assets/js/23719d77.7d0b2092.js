"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2214],{35318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var i=n(27378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),u=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return i.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,h=p["".concat(s,".").concat(d)]||p[d]||m[d]||a;return n?i.createElement(h,l(l({ref:t},c),{},{components:n})):i.createElement(h,l({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<a;u++)l[u]=n[u];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},55573:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var i=n(25773),r=(n(27378),n(35318));const a={pagination_prev:null,pagination_next:null,description:"DeviceScript client for Jacdac Multitouch service"},l="Multitouch",o={unversionedId:"api/clients/multitouch",id:"api/clients/multitouch",title:"Multitouch",description:"DeviceScript client for Jacdac Multitouch service",source:"@site/docs/api/clients/multitouch.md",sourceDirName:"api/clients",slug:"/api/clients/multitouch",permalink:"/devicescript/api/clients/multitouch",draft:!1,tags:[],version:"current",frontMatter:{pagination_prev:null,pagination_next:null,description:"DeviceScript client for Jacdac Multitouch service"},sidebar:"tutorialSidebar"},s={},u=[{value:"Registers",id:"registers",level:2},{value:"reading",id:"ro:reading",level:3},{value:"Events",id:"events",level:2},{value:"touch",id:"touch",level:3},{value:"release",id:"release",level:3},{value:"tap",id:"tap",level:3},{value:"longPress",id:"longpress",level:3},{value:"swipePos",id:"swipepos",level:3},{value:"swipeNeg",id:"swipeneg",level:3}],c={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"multitouch"},"Multitouch"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This service is experimental and may change in the future.")),(0,r.kt)("p",null,"A capacitive touch sensor with multiple inputs."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"client for ",(0,r.kt)("a",{parentName:"li",href:"https://microsoft.github.io/jacdac-docs/services/multitouch/"},"Multitouch service")),(0,r.kt)("li",{parentName:"ul"},"inherits Sensor")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { Multitouch } from "@devicescript/core"\n\nconst multitouch = new Multitouch()\n')),(0,r.kt)("h2",{id:"registers"},"Registers"),(0,r.kt)("h3",{id:"ro:reading"},"reading"),(0,r.kt)("p",null,"Capacitance of channels. The capacitance is continuously calibrated, and a value of ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," indicates\nno touch, wheres a value of around ",(0,r.kt)("inlineCode",{parentName:"p"},"100")," or more indicates touch.\nIt's best to ignore this (unless debugging), and use events."),(0,r.kt)("p",null,"Digital sensors will use ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"0xffff")," on each channel."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Register<any[]>")," (packing format ",(0,r.kt)("inlineCode",{parentName:"p"},"r: i16"),")")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"track incoming values"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip",skip:!0},'import { Multitouch } from "@devicescript/core"\n\nconst multitouch = new Multitouch()\n// ...\nmultitouch.reading.subscribe(async (value) => {\n    ...\n})\n')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"write")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"read")," will block until a server is bound to the client.")),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("h3",{id:"touch"},"touch"),(0,r.kt)("p",null,"Emitted when an input is touched."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"multitouch.touch.subscribe(() => {\n\n})\n")),(0,r.kt)("h3",{id:"release"},"release"),(0,r.kt)("p",null,"Emitted when an input is no longer touched."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"multitouch.release.subscribe(() => {\n\n})\n")),(0,r.kt)("h3",{id:"tap"},"tap"),(0,r.kt)("p",null,"Emitted when an input is briefly touched. TODO Not implemented."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"multitouch.tap.subscribe(() => {\n\n})\n")),(0,r.kt)("h3",{id:"longpress"},"longPress"),(0,r.kt)("p",null,"Emitted when an input is touched for longer than 500ms. TODO Not implemented."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"multitouch.longPress.subscribe(() => {\n\n})\n")),(0,r.kt)("h3",{id:"swipepos"},"swipePos"),(0,r.kt)("p",null,"Emitted when input channels are successively touched in order of increasing channel numbers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"multitouch.swipePos.subscribe(() => {\n\n})\n")),(0,r.kt)("h3",{id:"swipeneg"},"swipeNeg"),(0,r.kt)("p",null,"Emitted when input channels are successively touched in order of decreasing channel numbers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"multitouch.swipeNeg.subscribe(() => {\n\n})\n")),(0,r.kt)("p",null))}m.isMDXComponent=!0}}]);