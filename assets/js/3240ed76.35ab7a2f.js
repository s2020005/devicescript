"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1177],{35318:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(27378);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),v=a,m=u["".concat(l,".").concat(v)]||u[v]||d[v]||i;return r?n.createElement(m,o(o({ref:t},p),{},{components:r})):n.createElement(m,o({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=v;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}v.displayName="MDXCreateElement"},74009:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=r(25773),a=(r(27378),r(35318));const i={title:"Servers",sidebar_position:2.5},o="Servers",s={unversionedId:"developer/servers/index",id:"developer/servers/index",title:"Servers",description:"In DeviceScript, any hardware component is accessed through a service client.",source:"@site/docs/developer/servers/index.mdx",sourceDirName:"developer/servers",slug:"/developer/servers/",permalink:"/devicescript/developer/servers/",draft:!1,tags:[],version:"current",sidebarPosition:2.5,frontMatter:{title:"Servers",sidebar_position:2.5},sidebar:"tutorialSidebar",previous:{title:"Clients",permalink:"/devicescript/developer/clients"},next:{title:"Pins",permalink:"/devicescript/developer/servers/pins"}},l={},c=[{value:"Analog (builtin) servers",id:"analog-builtin-servers",level:2},{value:"Digital IO",id:"digital-io",level:2},{value:"I2C",id:"i2c",level:2},{value:"Jacdac modules",id:"jacdac-modules",level:2},{value:"Serial, SPI, PWM",id:"serial-spi-pwm",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"servers"},"Servers"),(0,a.kt)("p",null,"In DeviceScript, any hardware component is accessed through a service ",(0,a.kt)("strong",{parentName:"p"},"client"),".\nTherefore, you need to start service ",(0,a.kt)("strong",{parentName:"p"},"servers")," on top of your\nlow level hardware components to program them using DeviceScript."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Learn more about the ",(0,a.kt)("a",{parentName:"li",href:"/api/servers"},"available servers"))),(0,a.kt)("h2",{id:"analog-builtin-servers"},(0,a.kt)("a",{parentName:"h2",href:"/developer/servers/analog"},"Analog")," (builtin) servers"),(0,a.kt)("p",null,"DeviceScript provides helper functions to mount of variety of servers out of the box\nin the ",(0,a.kt)("inlineCode",{parentName:"p"},"@devicescript/servers")," module."),(0,a.kt)("p",null,"For example, the ",(0,a.kt)("a",{parentName:"p",href:"/api/servers/button"},"startButton")," function allows to mount a ",(0,a.kt)("a",{parentName:"p",href:"https://microsoft.github.io/jacdac-docs/services/button"},"button server"),"\nover a pin and returns the ",(0,a.kt)("a",{parentName:"p",href:"/api/clients/button"},"client")," for it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"no-run","no-run":!0},'import { gpio } from "@devicescript/core"\nimport { startButton } from "@devicescript/servers"\n\nconst buttonA = startButton({\n    pin: gpio(2),\n})\n')),(0,a.kt)("p",null,"Once you've add this code to your script, you can interact with pin ",(0,a.kt)("inlineCode",{parentName:"p"},"2")," (hardware specific identifier) through the ",(0,a.kt)("inlineCode",{parentName:"p"},"buttonA")," client.\nThe variable name is automatically used as the ",(0,a.kt)("strong",{parentName:"p"},"role")," and ",(0,a.kt)("strong",{parentName:"p"},"instance")," name."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"no-run","no-run":!0},'import { gpio } from "@devicescript/core"\nimport { startButton } from "@devicescript/servers"\n\nconst buttonA = startButton({\n    pin: gpio(2),\n})\nbuttonA.up.subscribe(() => {\n    console.log("up!")\n})\n')),(0,a.kt)("h2",{id:"digital-io"},(0,a.kt)("a",{parentName:"h2",href:"/developer/servers/digital-io"},"Digital IO")),(0,a.kt)("p",null,"Servers can be implemented using digital IO\nand are either built-in from C or authored in DeviceScript directly."),(0,a.kt)("h2",{id:"i2c"},(0,a.kt)("a",{parentName:"h2",href:"/developer/servers/i2c"},"I2C")),(0,a.kt)("p",null,"Servers can be implemented using I2C\nand are either built-in from C or authored in DeviceScript directly."),(0,a.kt)("h2",{id:"jacdac-modules"},"Jacdac modules"),(0,a.kt)("p",null,"If you connect a ",(0,a.kt)("a",{parentName:"p",href:"https://aka.ms/jacdac"},"Jacdac module"),", it will automatically run as a service server and\nyou will be available to bind a role to that module."),(0,a.kt)("p",null,"For example, the KittenBot KeyCap button will surface as a ",(0,a.kt)("strong",{parentName:"p"},"button server")," when connected."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://microsoft.github.io/jacdac-docs/devices/kittenbot/keycapbuttonv10/"},(0,a.kt)("img",{parentName:"a",src:"https://microsoft.github.io/jacdac-docs/images/devices/kittenbot/keycapbuttonv10.list.jpg",alt:"A KittenBot KeyCap button",title:"KittenBot KeyCap button"}))),(0,a.kt)("h2",{id:"serial-spi-pwm"},"Serial, SPI, PWM"),(0,a.kt)("p",null,"Serial, SPI, PWM are not supported yet at the DeviceScript level."))}d.isMDXComponent=!0}}]);