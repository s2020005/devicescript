"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5875],{35318:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var i=n(27378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),d=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=d(e.components);return i.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=d(n),f=r,m=p["".concat(l,".").concat(f)]||p[f]||u[f]||a;return n?i.createElement(m,o(o({ref:t},s),{},{components:n})):i.createElement(m,o({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:r,o[1]=c;for(var d=2;d<a;d++)o[d]=n[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2002:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var i=n(25773),r=(n(27378),n(35318));const a={description:"Learn how to create a new board configuration in DeviceScript for supported chipset architectures.",position:10,keywords:["DeviceScript","board configuration","Visual Studio Code","command line","flash firmware"]},o="Add Board",c={unversionedId:"devices/add-board",id:"devices/add-board",title:"Add Board",description:"Learn how to create a new board configuration in DeviceScript for supported chipset architectures.",source:"@site/docs/devices/add-board.mdx",sourceDirName:"devices",slug:"/devices/add-board",permalink:"/devicescript/devices/add-board",draft:!1,tags:[],version:"current",frontMatter:{description:"Learn how to create a new board configuration in DeviceScript for supported chipset architectures.",position:10,keywords:["DeviceScript","board configuration","Visual Studio Code","command line","flash firmware"]},sidebar:"tutorialSidebar",previous:{title:"Raspberry Pi Pico",permalink:"/devicescript/devices/rp2040/pico"},next:{title:"Command Line Interface",permalink:"/devicescript/api/cli"}},l={},d=[{value:"How to create a new board",id:"how-to-create-a-new-board",level:2},{value:"Create the new <code>board.json</code> file",id:"create-the-new-boardjson-file",level:3},{value:"Editing the generated Device configuration (.json) file",id:"editing-the-generated-device-configuration-json-file",level:3},{value:"Flash the new configuration",id:"flash-the-new-configuration",level:3},{value:"Contributing",id:"contributing",level:2}],s={toc:d},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"add-board"},"Add Board"),(0,r.kt)("p",null,"In DeviceScript, we commonly refere a Device Configuration as a ",(0,r.kt)("inlineCode",{parentName:"p"},"board"),"."),(0,r.kt)("p",null,"If your device is already using a supported chipset architecture,\nyou can create a new ",(0,r.kt)("inlineCode",{parentName:"p"},"board")," configuration in your project to support it in DeviceScript."),(0,r.kt)("h2",{id:"how-to-create-a-new-board"},"How to create a new board"),(0,r.kt)("h3",{id:"create-the-new-boardjson-file"},"Create the new ",(0,r.kt)("inlineCode",{parentName:"h3"},"board.json")," file"),(0,r.kt)("p",null,"You will need three pieces of information to start a new board: (1) the existing configuration\nyou will fork, (2) a name and (3) an identifier."),(0,r.kt)("p",null,"In ",(0,r.kt)("a",{parentName:"p",href:"/getting-started/vscode"},"Visual Studio Code"),",\nselect ",(0,r.kt)("strong",{parentName:"p"},"DeviceScript: Add Board...")," from the command palette."),(0,r.kt)("p",null,"Using the ",(0,r.kt)("a",{parentName:"p",href:"/getting-started/cli"},"Command Line"),", use the ",(0,r.kt)("inlineCode",{parentName:"p"},"add board")," command and follow the instructions."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"devicescript add board\n")),(0,r.kt)("p",null,"After this process, you wil have a new JSON under ",(0,r.kt)("inlineCode",{parentName:"p"},"/boards/"),". The command line and\nVisual Studio Code will automatically integrate any configuration files in the ",(0,r.kt)("inlineCode",{parentName:"p"},"/boards")," folder."),(0,r.kt)("h3",{id:"editing-the-generated-device-configuration-json-file"},"Editing the generated Device configuration (.json) file"),(0,r.kt)("p",null,"The new configuration file is a schematized JSON file. In Visual Studio Code, you will get tooltip, completion,\nsyntax errors and auto-completion."),(0,r.kt)("ul",{className:"contains-task-list"},(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Update the pin map"),(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Update the board description"),(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","If available, provide a URL where the board can be purchased")),(0,r.kt)("h3",{id:"flash-the-new-configuration"},"Flash the new configuration"),(0,r.kt)("p",null,"The command line and Visual Studio will automatically integrate any configuration file in the ",(0,r.kt)("inlineCode",{parentName:"p"},"boards/")," folder.\nThe first should be to flash the firmware again using the new configuration."),(0,r.kt)("p",null,"In ",(0,r.kt)("a",{parentName:"p",href:"/getting-started/vscode"},"Visual Studio Code"),",\nselect ",(0,r.kt)("strong",{parentName:"p"},"DeviceScript: Flash Firmware...")," from the command palette.\nUsing the ",(0,r.kt)("a",{parentName:"p",href:"/getting-started/cli"},"command line"),", use the ",(0,r.kt)("inlineCode",{parentName:"p"},"flash")," command."),(0,r.kt)("h2",{id:"contributing"},"Contributing"),(0,r.kt)("p",null,"If you have successfully crafted a configuration for your Device and you would like to share it with other users,\nyou can open a GitHub Issue at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/microsoft/devicescript"},"https://github.com/microsoft/devicescript")," and attach the .JSON file. The file will\nbe reviewed and integrate into the built-in list."))}u.isMDXComponent=!0}}]);