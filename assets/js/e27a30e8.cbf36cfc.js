"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5552],{35318:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(27378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),d=i,m=p["".concat(o,".").concat(d)]||p[d]||g[d]||s;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,a=new Array(s);a[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[p]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<s;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},14661:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>g,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=n(25773),i=(n(27378),n(35318));const s={pagination_prev:null,pagination_next:null,description:"DeviceScript client for Jacdac Settings service"},a="Settings",l={unversionedId:"api/clients/settings",id:"api/clients/settings",title:"Settings",description:"DeviceScript client for Jacdac Settings service",source:"@site/docs/api/clients/settings.md",sourceDirName:"api/clients",slug:"/api/clients/settings",permalink:"/devicescript/api/clients/settings",draft:!1,tags:[],version:"current",frontMatter:{pagination_prev:null,pagination_next:null,description:"DeviceScript client for Jacdac Settings service"},sidebar:"tutorialSidebar"},o={},c=[{value:"About",id:"about",level:2},{value:"Secrets",id:"secrets",level:2},{value:"Commands",id:"commands",level:2},{value:"get",id:"get",level:3},{value:"set",id:"set",level:3},{value:"delete",id:"delete",level:3},{value:"listKeys",id:"listkeys",level:3},{value:"list",id:"list",level:3},{value:"clear",id:"clear",level:3},{value:"Events",id:"events",level:2},{value:"change",id:"change",level:3}],u={toc:c},p="wrapper";function g(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"settings"},"Settings"),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"This service is experimental and may change in the future.")),(0,i.kt)("p",null,"Non-volatile key-value storage interface for storing settings."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"client for ",(0,i.kt)("a",{parentName:"li",href:"https://microsoft.github.io/jacdac-docs/services/settings/"},"Settings service")),(0,i.kt)("li",{parentName:"ul"},"inherits Role")),(0,i.kt)("h2",{id:"about"},"About"),(0,i.kt)("h2",{id:"secrets"},"Secrets"),(0,i.kt)("p",null,"Entries with keys starting with ",(0,i.kt)("inlineCode",{parentName:"p"},"$")," are considered secret.\nThey can be written normally, but they read as a single ",(0,i.kt)("inlineCode",{parentName:"p"},"0")," byte,\nunless they are empty, in which case the value returned is also empty.\nThese are typically used by other services on the same device."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { Settings } from "@devicescript/core"\n\nconst settings = new Settings()\n')),(0,i.kt)("h2",{id:"commands"},"Commands"),(0,i.kt)("h3",{id:"get"},"get"),(0,i.kt)("p",null,"Get the value of given setting. If no such entry exists, the value returned is empty."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"settings.get(key: string): Promise<void>\n")),(0,i.kt)("h3",{id:"set"},"set"),(0,i.kt)("p",null,"Set the value of a given setting."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"settings.set(key: string, value: Buffer): Promise<void>\n")),(0,i.kt)("h3",{id:"delete"},"delete"),(0,i.kt)("p",null,"Delete a given setting."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"settings.delete(key: string): Promise<void>\n")),(0,i.kt)("h3",{id:"listkeys"},"listKeys"),(0,i.kt)("p",null,"Return keys of all settings."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"settings.listKeys(results: unknown): Promise<void>\n")),(0,i.kt)("h3",{id:"list"},"list"),(0,i.kt)("p",null,"Return keys and values of all settings."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"settings.list(results: unknown): Promise<void>\n")),(0,i.kt)("h3",{id:"clear"},"clear"),(0,i.kt)("p",null,"Clears all keys."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"settings.clear(): Promise<void>\n")),(0,i.kt)("h2",{id:"events"},"Events"),(0,i.kt)("h3",{id:"change"},"change"),(0,i.kt)("p",null,"Notifies that some setting have been modified."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"settings.change.subscribe(() => {\n\n})\n")),(0,i.kt)("p",null))}g.isMDXComponent=!0}}]);