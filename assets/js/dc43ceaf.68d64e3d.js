"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9005],{35318:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var i=n(27378);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=i.createContext({}),c=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return i.createElement(p.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},g=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=c(n),g=l,b=s["".concat(p,".").concat(g)]||s[g]||m[g]||r;return n?i.createElement(b,a(a({ref:t},u),{},{components:n})):i.createElement(b,a({ref:t},u))}));function b(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,a=new Array(r);a[0]=g;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[s]="string"==typeof e?e:l,a[1]=o;for(var c=2;c<r;c++)a[c]=n[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}g.displayName="MDXCreateElement"},92330:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var i=n(25773),l=(n(27378),n(35318));const r={pagination_prev:null,pagination_next:null,description:"DeviceScript client for Jacdac Light bulb service"},a="LightBulb",o={unversionedId:"api/clients/lightbulb",id:"api/clients/lightbulb",title:"LightBulb",description:"DeviceScript client for Jacdac Light bulb service",source:"@site/docs/api/clients/lightbulb.md",sourceDirName:"api/clients",slug:"/api/clients/lightbulb",permalink:"/devicescript/api/clients/lightbulb",draft:!1,tags:[],version:"current",frontMatter:{pagination_prev:null,pagination_next:null,description:"DeviceScript client for Jacdac Light bulb service"},sidebar:"tutorialSidebar"},p={},c=[{value:"Registers",id:"registers",level:2},{value:"intensity",id:"rw:intensity",level:3},{value:"dimmable",id:"const:dimmable",level:3},{value:"on",id:"cmd:on",level:3},{value:"off",id:"cmd:off",level:3},{value:"toggle",id:"cmd:toggle",level:3}],u={toc:c},s="wrapper";function m(e){let{components:t,...n}=e;return(0,l.kt)(s,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"lightbulb"},"LightBulb"),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"This service is rc and may change in the future.")),(0,l.kt)("p",null,"A light bulb controller."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"client for ",(0,l.kt)("a",{parentName:"li",href:"https://microsoft.github.io/jacdac-docs/services/lightbulb/"},"Light bulb service")),(0,l.kt)("li",{parentName:"ul"},"inherits Role")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { LightBulb } from "@devicescript/core"\n\nconst lightBulb = new LightBulb()\n')),(0,l.kt)("h2",{id:"registers"},"Registers"),(0,l.kt)("h3",{id:"rw:intensity"},"intensity"),(0,l.kt)("p",null,"Indicates the brightness of the light bulb. Zero means completely off and 0xffff means completely on.\nFor non-dimmable lights, the value should be clamp to 0xffff for any non-zero value."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"type: ",(0,l.kt)("inlineCode",{parentName:"p"},"Register<number>")," (packing format ",(0,l.kt)("inlineCode",{parentName:"p"},"u0.16"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"read and write"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip",skip:!0},'import { LightBulb } from "@devicescript/core"\n\nconst lightBulb = new LightBulb()\n// ...\nconst value = await lightBulb.intensity.read()\nawait lightBulb.intensity.write(value)\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"track incoming values")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip",skip:!0},'import { LightBulb } from "@devicescript/core"\n\nconst lightBulb = new LightBulb()\n// ...\nlightBulb.intensity.subscribe(async (value) => {\n    ...\n})\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("inlineCode",{parentName:"p"},"write")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"read")," will block until a server is bound to the client.")),(0,l.kt)("h3",{id:"const:dimmable"},"dimmable"),(0,l.kt)("p",null,"Indicates if the light supports dimming."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"type: ",(0,l.kt)("inlineCode",{parentName:"p"},"Register<boolean>")," (packing format ",(0,l.kt)("inlineCode",{parentName:"p"},"u8"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"optional: this register may not be implemented")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"constant: the register value will not change (until the next reset)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"read only"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip",skip:!0},'import { LightBulb } from "@devicescript/core"\n\nconst lightBulb = new LightBulb()\n// ...\nconst value = await lightBulb.dimmable.read()\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("inlineCode",{parentName:"p"},"write")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"read")," will block until a server is bound to the client.")),(0,l.kt)("h3",{id:"cmd:on"},"on"),(0,l.kt)("p",null,"Turns on of the light bulb with an optional intensity value."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { LightBulb } from "@devicescript/core"\nconst lightBulb = new LightBulb()\n\n// highlight-next-line\nawait lightBulb.on(0.5)\n')),(0,l.kt)("h3",{id:"cmd:off"},"off"),(0,l.kt)("p",null,"Turns off of the light bulb, same as writing 0 to the intensity register."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { LightBulb } from "@devicescript/core"\nconst lightBulb = new LightBulb()\n\n// highlight-next-line\nawait lightBulb.off()\n')),(0,l.kt)("h3",{id:"cmd:toggle"},"toggle"),(0,l.kt)("p",null,"The toggle method flips the brightness state."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { LightBulb } from "@devicescript/core"\nconst lightBulb = new LightBulb()\n\n// highlight-next-line\nawait lightBulb.toggle()\n')))}m.isMDXComponent=!0}}]);